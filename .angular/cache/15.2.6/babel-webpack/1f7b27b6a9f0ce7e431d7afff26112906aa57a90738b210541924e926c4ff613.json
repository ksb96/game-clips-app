{"ast":null,"code":"import _defineProperty from \"D:/Courses/prjs/angular-local/clips-app/game-clips-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction InputComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 2);\n    i0.ɵɵtext(1, \" Field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InputComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" The value you entered is \", ctx_r1.control.errors == null ? null : ctx_r1.control.errors.minlength.actualLength, \" characters long. It must be at least \", ctx_r1.control.errors == null ? null : ctx_r1.control.errors.minlength.requiredLength, \" characters long. \");\n  }\n}\nexport class InputComponent {\n  constructor() {\n    _defineProperty(this, \"control\", new FormControl());\n  }\n}\n_defineProperty(InputComponent, \"\\u0275fac\", function InputComponent_Factory(t) {\n  return new (t || InputComponent)();\n});\n_defineProperty(InputComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputComponent,\n  selectors: [[\"app-input\"]],\n  inputs: {\n    control: \"control\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[\"type\", \"text\", \"placeholder\", \"Enter Name\", 1, \"block\", \"w-full\", \"py-1.5\", \"px-3\", \"text-gray-200\", \"border\", \"border-gray-400\", \"transition\", \"duration-500\", \"focus:outline-none\", \"rounded\", \"bg-transparent\", \"focus:border-indigo-400\", 3, \"formControl\"], [\"class\", \"text-red-400\", 4, \"ngIf\"], [1, \"text-red-400\"]],\n  template: function InputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0);\n      i0.ɵɵelementContainerStart(1);\n      i0.ɵɵtemplate(2, InputComponent_p_2_Template, 2, 0, \"p\", 1);\n      i0.ɵɵtemplate(3, InputComponent_p_3_Template, 2, 2, \"p\", 1);\n      i0.ɵɵelementContainerEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formControl\", ctx.control);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.touched && ctx.control.dirty && (ctx.control.errors == null ? null : ctx.control.errors.required));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.touched && ctx.control.dirty && (ctx.control.errors == null ? null : ctx.control.errors.minlength));\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n}));","map":{"version":3,"mappings":";AACA,SAASA,WAAW,QAAQ,gBAAgB;;;;;;ICGxCC,4BAA6F;IACzFA,mCACA;IACJA,iBAAI;;;;;IACJA,4BAA8F;IAC1FA,YAEJ;IAAAA,iBAAI;;;;IAFAA,eAEJ;IAFIA,+RAEJ;;;ADHJ,OAAM,MAAOC,cAAc;EAAA;IAAA,iCACO,IAAIF,WAAW,EAAE;EAAA;;gBADtCE,cAAc;mBAAdA,cAAc;AAAA;AAAA,gBAAdA,cAAc;QAAdA,cAAc;EAAAC;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP3BR,2BAC8G;MAC9GA,6BAAc;MACVA,2DAGI;MACJA,2DAGI;MACRA,0BAAe;;;MAXRA,yCAAuB;MAGtBA,eAAkE;MAAlEA,oIAAkE;MAIlEA,eAAmE;MAAnEA,qIAAmE","names":["FormControl","i0","InputComponent","selectors","inputs","control","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Courses\\prjs\\angular-local\\clips-app\\game-clips-app\\src\\app\\shared\\input\\input.component.ts","D:\\Courses\\prjs\\angular-local\\clips-app\\game-clips-app\\src\\app\\shared\\input\\input.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent {\n  @Input() control: FormControl = new FormControl()\n}\n","<!-- 2-way binding -->\n<input [formControl]=\"control\" type=\"text\" class=\"block w-full py-1.5 px-3 text-gray-200 border border-gray-400 transition\n   duration-500 focus:outline-none rounded bg-transparent focus:border-indigo-400\" placeholder=\"Enter Name\" />\n<ng-container>\n    <p *ngIf=\"control.touched && control.dirty && control.errors?.required\" class=\"text-red-400\">\n        Field is required\n        <!-- {{ registerForm.controls.name?.errors | json }} -->\n    </p>\n    <p *ngIf=\"control.touched && control.dirty && control.errors?.minlength\" class=\"text-red-400\">\n        The value you entered is {{ control.errors?.minlength.actualLength}} characters long.\n        It must be at least {{ control.errors?.minlength.requiredLength }} characters long.\n    </p>\n</ng-container>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}